% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_seeds_remote.R
\name{get_seeds_remote}
\alias{get_seeds_remote}
\title{Query primer_blast and generate a .csv to use for blast_seeds}
\usage{
get_seeds_remote(
  forward_primer_seq,
  reverse_primer_seq,
  output_directory_path,
  metabarcode_name,
  accession_taxa_sql_path,
  organism,
  mismatch = 3,
  minimum_length = 5,
  maximum_length = 500,
  primer_specificity_database = "nt",
  ...,
  return_table = TRUE
)
}
\arguments{
\item{forward_primer_seq}{passed to primer_search, which turns it into a list of
each primer it could be based on its degenerate primers, then passes
each one in turn to NCBI}

\item{reverse_primer_seq}{passed to primer_search, which turns it into a list of
each primer it could be based on its degenerate primers, then passes
each one in turn to NCBI}

\item{output_directory_path}{the parent directory to place the data in.}

\item{metabarcode_name}{used to name the subdirectory and the files. If a
directory named metabarcode_name does not exist in output_directory_path, a
new directory will be created. get_seeds_remote appends
metabarcode_name to the beginning of each of the two files it
generates.}

\item{accession_taxa_sql_path}{the path to sql created by taxonomizr}

\item{organism}{a vector of character vectors. Each character vector is
passed in turn to primer_search, which passes them to NCBI.
get_seeds_remote aggregates all of the results into a single file.}

\item{mismatch}{the highest acceptable mismatch value. parse_primer_hits
returns a table with a mismatch column. get_seeds_remote removes each
row with a mismatch greater than the specified value.}

\item{minimum_length}{parse_primer_hits returns a table with a product_length
column. get_seeds_remote removes each row that has a value less than
minimum_length in the product_length column.}

\item{maximum_length}{parse_primer_hits returns a table with a
product_length column. get_seeds_remote removes each row that has a
value greater than maximum_length in the product_length column}

\item{primer_specificity_database}{passed to primer_search, which passes it
to NCBI}

\item{...}{additional arguments passed to primer_search, which passes it to
NCBI}

\item{HITSIZE}{a primer BLAST search parameter set high to maximize the
number of observations returned.}

\item{NUM_TARGETS_WITH_PRIMERS}{a primer BLAST search parameter set high to
maximize the number of observations returned.}
}
\value{
a data.frame containing the same information as the .csv it generates
}
\description{
get_seeds_remote uses a modified version of \code{\link[primerTree:primer_search]{primerTree::primer_search()}} to
query NCBI's \href{https://www.ncbi.nlm.nih.gov/tools/primer-blast/}{primer BLAST}
tool, filters the results, then aggregates them into a single data.frame.
As a side effect, it creates a directory at \code{output_directory_path} if one doesn't yet
exist, then creates a subdirectory inside \code{output_directory_path} named after
\code{metabarcode_name}. It creates two files inside that directory, one
representing the output and the other representing the output without added
taxonomy.
}
\section{Additional arguments passed to primer BLAST}{
get_seeds_remote passes many parameters to NCBI's primer blast tool. You can
match the parameters to the fields available in the GUI
\href{https://www.ncbi.nlm.nih.gov/tools/primer-blast/}{here}. First, use your
browser to view the page source. Search for the field you are interested in
by searching for the title of the field. It should be enclosed in a tag.
Inside the label tag, it says \verb{for = "<name_of_parameter>"}. Copy the string
after for = and add it to get_seeds_remote as the name of a parameter, setting
it equal to whatever you like.

As of 2022-08-16, the primer blast GUI
contains some options that are not implemented by primer_search.
primer_search doesn't include explicit documentation of allowed options, but
it will quickly report if an option isn't allowed, so trial and error will
not be very time consuming.
}

