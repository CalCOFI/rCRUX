% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_blastdbcmd_blastn_and_aggregate_resuts.R
\name{run_blastdbcmd_blastn_and_aggregate_resuts}
\alias{run_blastdbcmd_blastn_and_aggregate_resuts}
\title{Runs \code{\link[=run_blastdbcmd]{run_blastdbcmd()}}, \code{\link[=run_blastn]{run_blastn()}}, and aggregates and
saves the results}
\usage{
run_blastdbcmd_blastn_and_aggregate_resuts(
  sample_indices,
  save_dir,
  blast_seeds_m,
  ncbi_bin = NULL,
  db,
  too_many_ns,
  blastdbcmd_failed,
  unsampled_indices,
  output_table,
  wildcards,
  num_rounds,
  ...
)
}
\arguments{
\item{sample_indices}{the indices to sample}

\item{save_dir}{a directory in which to create files representing the
current state}

\item{blast_seeds_m}{blast seeds table but with blast status update}

\item{ncbi_bin}{passed to \code{\link[=run_blastdbcmd]{run_blastdbcmd()}} \code{\link[=run_blastn]{run_blastn()}} is
the path to blast+ tools if not in the user's path.  Specify only if
blastn and blastdbcmd  are not in your path.
The default is ncbi_bin = NULL - if not specified in path do the
following: ncbi_bin = "/my/local/ncbi-blast-2.10.1+/bin/".}

\item{db}{path to the blast db}

\item{too_many_ns}{a vector of indices that result
in a fasta with too many Ns}

\item{blastdbcmd_failed}{the indicies not found in your blast db}

\item{unsampled_indices}{the indices that need to be sampled}

\item{output_table}{the table of results}

\item{wildcards}{is a character vector that represents the minimum number
of consecutive Ns the user will tolerate in a given seed or hit
sequence. The default is wildcards = "NNNN"}

\item{num_rounds}{number of rounds of blast}

\item{...}{
  Arguments passed on to \code{\link[=run_blastn]{run_blastn}}
  \describe{
    \item{\code{fasta}}{a fasta-formatted string}
    \item{\code{temp_fasta_path}}{a file path to write a temporary fasta to - blastn requires a file to query}
    \item{\code{evalue}}{is the number of expected hits with a similar quality score
found by chance. The default is evalue = 1e-6.}
    \item{\code{coverage}}{is the minimum percent of the query length recovered in the
subject hits. The default is coverage = 50.}
    \item{\code{perID}}{is the minimum percent identity of the query relative to the
subject hits. The default is perID = 70.}
    \item{\code{align}}{is the maximum number of subject hits to return per query
blasted. The default is align = 50000.}
    \item{\code{num_threads}}{number, the number of CPUs to engage in the blastn search. The
value 'max' can be used and which uses \code{\link[parallel:detectCores]{parallel::detectCores()}} to determine
the user's maximum number of CPUs automatically (use with caution; Default = 1)}
  }}
}
\description{
It uses \code{\link[=run_blastdbcmd]{run_blastdbcmd()}} to find a seed sequence that corresponds to
the accession number and forward and reverse stops recorded in the seeds table.
\code{\link[=run_blastdbcmd]{run_blastdbcmd()}} outputs sequences as .fasta-formatted strings, which
run_blastdbcmd_blastn_and_aggregate_resuts concatenates into a multi-line
fasta, then passes to \code{\link[=run_blastn]{run_blastn()}} as an argument. The output of
\code{\link[=run_blastn]{run_blastn()}} is de-replicated by accession, and only the longest
read per replicates is retained in the output table. The run state is saved
and passed back to \code{\link[=blast_datatable]{blast_datatable()}}.
}
