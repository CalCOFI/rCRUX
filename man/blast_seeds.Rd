% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blast_seeds.R
\name{blast_seeds}
\alias{blast_seeds}
\title{Generate a metabarcode database by blasting a stratified random sample of
seed sequences}
\usage{
blast_seeds(
  seeds_output_path,
  blast_db_path,
  accession_taxa_sql_path,
  output_directory_path,
  metabarcode_name,
  expand_vectors = TRUE,
  minimum_length = 5,
  maximum_length = 500,
  ...
)
}
\arguments{
\item{seeds_output_path}{a path to a csv from \code{get_seeds_local()} or \code{get_seeds_remote()}
(e.g. seeds_output_path <- '/my/rCRUX_output_directory/12S_V5F1_filtered_get_seeds_remote_output_with_taxonomy.csv')}

\item{blast_db_path}{a directory containing one or more blast-formatted database.
For multiple blast databases, separate them with a space and add an extra set of quotes.
(e.g blast_db_path <- "/my/ncbi_nt/nt" or blast_db_path <- '"/my/ncbi_nt/nt  /my/ncbi_ref_euk_rep_genomes/ref_euk_rep_genomes"')}

\item{accession_taxa_sql_path}{a path to the accessionTaxa sql created by
taxonomizr (e.g. accession_taxa_sql_path <- "/my/accessionTaxa.sql")}

\item{output_directory_path}{a directory in which to save partial and complete output
(e.g. "/path/to/output/12S_V5F1_local_111122_e300_111122").}

\item{metabarcode_name}{a prefix for the output fasta, taxonomy, and count of
unique ranks.(e.g. metabarcode_name <- "12S_V5F1").}

\item{expand_vectors}{logical, determines whether to expand too_many_Ns
and not_in db into real tables and write them in the output directory.
the default is expand_vectors = TRUE.}

\item{minimum_length}{removes each blast result that has a value less than
minimum_length in the product_length column.
The default is minimum_length = 5}

\item{maximum_length}{removes removes each blast that has a
value greater than maximum_length in the product_length column
The default is maximum_length = 500}

\item{...}{
  Arguments passed on to \code{\link[=blast_datatable]{blast_datatable}}
  \describe{
    \item{\code{blast_seeds}}{a data.frame formatted like the output from
get_seeds_remote or get_seeds_local}
    \item{\code{save_dir}}{a directory in which to create files representing the
current state}
    \item{\code{ncbi_bin}}{the directory that the blast+ suite is in. If NULL, the
program will use your PATH environmental variable to locate them}
    \item{\code{force_db}}{if true, try to use blast databases that don't appear to
be blast databases}
    \item{\code{sample_size}}{the number of entries to sample per rank
before calling blastn - errors if not enough entries per rank (default = 1)}
    \item{\code{max_to_blast}}{is the maximum number of entries to accumulate into a
fasta before calling blastn (default = 1000)}
    \item{\code{wildcards}}{a character vector representing the number of wildcards to
discard (default = "NNNNNNNNNNNN")}
    \item{\code{rank}}{the column representing the taxonomic rank to randomly sample (default = genus)}
    \item{\code{random_seed}}{sets the random value generator for random stratified sampling. Change the default (random_seed = NULL) for reproducible results.}
  }}
}
\description{
\code{blast_seeds()} is a wrapper function for \code{\link[=blast_datatable]{blast_datatable()}} -
to search seeds from \verb{get_seeds_*} functions against a blast formatted
database - while wrangling the output for downstream use.\cr

It creates a permanent directory \code{blast_seeds_output} and
a temporary directory \code{blast_seeds_save} in the \code{output_directory_path}.
It saves from, and passes files to, \code{\link[=blast_datatable]{blast_datatable()}} while the run
is in progress. During the final steps of the function the final data is saved in
\code{blast_seeds_output} recording the results of the blast.
}
\details{
The \code{\link[=blast_datatable]{blast_datatable()}} call saves intermediate results and
metadata about the search as local files in the save directory generated by
blast_seeds. This allows the function to resume a partially
completed blast, mitigating the consequences of encountering an
error or experiencing other interruptions. To resume a partially completed
blast, supply the same seeds and working directory. See the documentation
of \code{\link[=blast_datatable]{blast_datatable()}} for more information.

During the blast_seeds the following data are cached as files and passed into
\code{\link[=blast_datatable]{blast_datatable()}}: output_table.txt (most recent updates from the
blast run), blast_seeds_passed_filter.txt (seed table that tracks the blast
status of seeds), unsampled_indices.txt (list of seed indices that need to
be blasted), too_many_ns.txt (tracks seeds that have been removed due to more
consecutive Ns in a sequence than are acceptable (see parameter wildcards),
blastdbcmd_failed.txt (tracks reads that are present in the seeds database,
but not the local blast database. This is relevant for the results of
\code{\link[=get_seeds_remote]{get_seeds_remote()}}), and lastly num_rounds.txt (tracks the number of
completed blast round for a given seed file).

The final output of blast_seeds, stored in \code{blast_seeds_output}, are the
following: summary.csv (blast output with appended taxonomy),
{metabarcode_name}_.fasta (contains the sequence for all accessions recovered
during the blast search), {metabarcode_name}.taxonomy (contains the taxonomy
for all accessions recovered during the blast search),
{metabarcode_name}_blast_seeds_summary_unique_taxonomic_rank_counts.txt
(provides a count of all unique instances within a taxonomic rank),
too_many_ns.txt (tracks seeds that have been removed due to more
consecutive Ns in a sequence than are acceptable (see parameter wildcards),
blastdbcmd_failed.txt (tracks reads that are present in the seeds database,
but not the local blast database. This is relevant for the results of
\code{\link[=get_seeds_remote]{get_seeds_remote()}}).
}
\examples{

\dontrun{

seeds_output_path <-
  file.path("my/directory",
   "12S_V5F1_remote_111122_modified_params/blast_seeds_output",
   "summary.csv")

output_directory_path <- "/my/directory/12S_V5F1_remote_111122_modified_params"
metabarcode_name <- "12S_V5F1"
accession_taxa_sql_path <- "/my/directory/accessionTaxa.sql"
blast_db_path <- "/my/directory/ncbi_nt/nt"


blast_seeds(seeds_output_path,
            blast_db_path,
            accession_taxa_sql_path,
            output_directory_path,
            metabarcode_name,
            rank = 'species',
            max_to_blast = 750)

# using the rank of species will increase the number of total unique blast hits
# modifying the max_to_blast submits fewer reads simultaneously and reduces
# overall RAM while extending the run
}
}
